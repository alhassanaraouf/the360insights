# Taekwondo Video Analysis System - Complete Implementation Guide
## System Overview
Build a web-based Taekwondo video analysis platform that allows users to upload match videos and receive AI-powered technical analysis. The system uses Gemini 2.5 Pro for video understanding and provides detailed breakdowns of matches including scoring, techniques, violations, and coaching advice.
## Core Features
### 1. Video Upload & Processing
- Accept MP4 video files up to 500MB
- Support two analysis types:
  - **Match Analysis**: Full match breakdown with scoring, techniques, and tactical insights
  - **Clip Analysis**: Custom analysis for specific techniques or moments
- Process videos using Gemini Files API to avoid memory issues
- Automatic cleanup of uploaded files after analysis
### 2. Match Analysis Flow
#### Sport Detection
- Automatically detect if the sport is Taekwondo
- Use sport-specific analysis prompts and metrics
#### Round Selection
- Allow users to select specific rounds (1-50) or analyze entire match
- Support "no-rounds" option for non-round-based videos
#### Analysis Components (All run in parallel using Promise.allSettled)
**A. Match Analysis (Text-based)**
- Technical match narrative
- Story of the round/match
- Player strategies and adaptations
- Key moments and commentator insights
- Performance summary
**B. Score Analysis (JSON)**
```json
{
  "players": [
    {
      "name": "Player Name",
      "total": 0,
      "events": [
        {
          "timestamp": "MM:SS",
          "description": "Score description",
          "value": 1
        }
      ]
    }
  ]
}
C. Punch Analysis (JSON)

Track when players throw punches
Use same JSON structure as score analysis
Count all attempts (successful or blocked)
D. Kick Count (JSON)

Total number of kicks executed
Track every attempt regardless of success
Timestamp each kick
E. Yellow Card/Violations (JSON)

Watch scoreboard for referee signals
Track warnings and penalties
Record exact timestamps
F. Player Advice (JSON)

{
  "players": [
    {
      "name": "Player Name",
      "tactical_advice": {
        "issues": ["List of tactical mistakes"],
        "improvements": ["Specific recommendations"]
      },
      "technical_advice": {
        "issues": ["Technical mistakes"],
        "improvements": ["Skills to work on"]
      },
      "mental_advice": {
        "issues": ["Mental/psychological issues"],
        "improvements": ["Mental training recommendations"]
      }
    }
  ]
}
3. Clip Analysis Flow
User provides custom analysis request (e.g., "analyze my spinning hook kick technique")
AI provides detailed coaching advice:
What's being done correctly
Areas for improvement
Actionable steps and drills
Safety considerations
Professional standards comparison
4. Progress Tracking
Match Analysis Stages:

"Uploading video file..."
"Processing video..."
"Analyzing match dynamics..."
"Identifying scoring patterns..."
"Analyzing techniques..."
"Counting kicks and punches..."
"Reviewing violations..."
"Generating player advice..."
"Finalizing analysis..."
Clip Analysis Stages:

"Uploading video clip..."
"Processing video..."
"Understanding your request..."
"Analyzing techniques..."
"Comparing to professional standards..."
"Identifying improvement areas..."
"Generating coaching advice..."
"Finalizing recommendations..."
5. Key Technical Requirements
Video Upload to Gemini
// Upload without loading into memory
const fileManager = new GoogleAIFileManager(API_KEY);
const uploadResponse = await fileManager.uploadFile(videoPath, {
  mimeType: 'video/mp4',
  displayName: `video_analysis_${Date.now()}`
});
// Wait for processing
let file = await fileManager.getFile(uploadResponse.file.name);
while (file.state === 'PROCESSING') {
  await new Promise(resolve => setTimeout(resolve, 5000));
  file = await fileManager.getFile(uploadResponse.file.name);
}
Gemini Model Configuration
const model = genai.getGenerativeModel({
  model: "gemini-2.5-pro",
  generationConfig: {
    temperature: 0,
    maxOutputTokens: 8192,
  }
});
JSON Cleaning Function
function cleanJsonResponse(responseText: string): string {
  let cleanedText = responseText.trim();
  
  // Remove code block markers
  cleanedText = cleanedText.replace(/^```json\s*/, '').replace(/\s*```$/, '');
  cleanedText = cleanedText.replace(/^```\s*/, '').replace(/\s*```$/, '');
  
  // Parse and reformat
  try {
    const parsed = JSON.parse(cleanedText);
    return JSON.stringify(parsed);
  } catch (error) {
    // Cleanup attempts...
    return cleanedText;
  }
}
Timestamp Format Enforcement
CRITICAL: All timestamps MUST be in MM:SS format (Minutes:Seconds)
Never use HH:MM:SS format
Explicitly specify this in every prompt
6. Taekwondo-Specific Prompts
Match Analysis Prompt Template
Write me a match analysis of what happened in [round X / entire match] in technical terms. Include the story of the [round/match].
Write your response in English.
Focus on:
- Opening strategy and tactics
- Key moments and turning points
- Technical execution quality
- Tactical adjustments
- Momentum shifts
- Critical decisions
- Overall performance assessment
Listen to commentator insights and incorporate them into your analysis. Watch the scoreboard for accurate score tracking.
Start with the first player, then analyze the second player. Use actual player names from the video.
Provide a detailed narrative that captures the essence of the competition.
Score Analysis Prompt
Watch [round X / entire match] only. Identify when a player scored using the scoreboard. Focus on scoreboard changes for accuracy. Listen to commentators - they help reference which player scored how many points.
Write your response in English.
Return this EXACT JSON format:
{
  "players": [
    {
      "name": "Actual Player Name",
      "total": total_score_number,
      "events": [
        {
          "timestamp": "MM:SS",
          "description": "Point description",
          "value": points_scored
        }
      ]
    }
  ]
}
CRITICAL:
- Use MM:SS timestamp format (Minutes:Seconds)
- Use actual player names from video
- Track cumulative score changes
- List scoring events chronologically
Clip Analysis Prompt
You are an expert Taekwondo coach and performance analyst with extensive experience in professional training and technique optimization.
Analyze this video clip based on the user's specific request and provide detailed, actionable coaching advice.
User's Request: [whatToAnalyze]
Sport: Taekwondo
Key Technical Elements: kicks, punches, head kicks, body kicks, spinning kicks
IMPORTANT: Skip all introductory sentences. Do not start with phrases like "Of course", "As a coach", etc. Start directly with the analysis content.
Please provide a comprehensive coaching analysis that:
1. Directly addresses the user's specific question
2. Identifies what each person is doing correctly
3. Points out specific technical areas needing improvement
4. Provides actionable steps and drills
5. Compares technique to professional standards
6. Includes safety considerations
7. Suggests specific exercises and training methods
8. If analyzing multiple people, provide individual feedback
Please provide the analysis in English.
Be specific, detailed, and constructive. Focus on practical coaching advice.
7. Error Handling
Critical Errors (Stop Processing)
Empty video file
File upload failure
Video processing timeout (10 minutes)
Complete Gemini API failure
Recoverable Errors (Continue with Fallbacks)
Individual metric analysis failure → Return empty structure
JSON parsing failure → Use repair function
Metric truncation → Retry with simpler prompt
Fallback JSON Structures
// Empty metric fallback
{
  "players": [
    {
      "name": "Player 1",
      "total": 0,
      "events": []
    },
    {
      "name": "Player 2", 
      "total": 0,
      "events": []
    }
  ]
}
8. File Cleanup Protocol
// Always cleanup uploaded files
finally {
  if (uploadedFile) {
    try {
      const fileManager = new GoogleAIFileManager(API_KEY);
      await fileManager.deleteFile(uploadedFile.name);
      console.log('Uploaded file cleaned up successfully');
    } catch (cleanupError) {
      console.warn('Failed to cleanup uploaded file:', cleanupError);
    }
  }
}
9. Analysis Result Structure
Match Analysis Response
{
  match_analysis: string,              // Narrative text
  score_analysis: JSON,                // Score events
  punch_analysis: JSON,                // Punch events
  kick_count_analysis: JSON,           // Kick count
  yellow_card_analysis: JSON,          // Violations
  advice_analysis: JSON,               // Player advice
  sport: "Taekwondo",
  roundAnalyzed: number | 'no-rounds',
  processedAt: ISO_timestamp,
  errors: {
    match: null | string,
    score: null | string,
    // ... error tracking for each component
  }
}
Clip Analysis Response
{
  analysisType: 'clip',
  userRequest: string,
  sport: "Taekwondo",
  language: "english",
  analysis: string,                    // Coaching advice text
  processedAt: ISO_timestamp
}
10. Performance Optimizations
Use Promise.allSettled for parallel analysis
Set 10-minute server timeout for long videos
Implement progress updates via WebSocket/SSE
Clean up files immediately after processing
Use Gemini Files API to avoid memory loading
11. UI/UX Requirements
Show smooth progress bar (0-100%)
Display current analysis stage
Allow cancellation mid-analysis
Show estimated time remaining (4-7 minutes typical)
Provide clear error messages
Support video preview before upload
12. Data Validation
Ensure all timestamps are MM:SS format
Verify player names are extracted from video (not generic)
Validate JSON structure before returning
Check for truncated responses and retry
Confirm all required fields are present
Implementation Checklist
 Video upload endpoint with file size validation
 Gemini Files API integration
 Parallel analysis execution
 JSON response cleaning and validation
 Progress tracking system
 Error handling and fallbacks
 File cleanup automation
 Match analysis component
 Clip analysis component
 Timestamp format enforcement
 Player advice generation
 Results display interface
 Cancellation functionality
This prompt covers all the essential features, logic flows, error handling, and technical implementation details from your video analysis system, tailored for a Taekwondo-only, English-only platform without token requirements.
